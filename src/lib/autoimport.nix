{
  lib,
  root,
}:
/*
Automatically imports nix files, inspired by haumea.

This is a convenience function that collects all modules from
the source path and imports them with the provided arguments.
*/
{
  args, # parameter provided by synergy to all loaded files if they are functions
  source, # directory or file to collect and import
  squash ? false, # whether the result should be flatten, or respect the source tree
}:
lib.trivial.throwIf (!(builtins.hasAttr "_synergy" args)) ''
  Expected args to be generated by synergy.
  It should contain an attribute _synergy, but contained [${lib.strings.concatStringsSep "," (builtins.attrNames args)}].
'' (root.modules.import {
  source = root.modules.collect source;
  inherit squash args;
  inherit (args._synergy) unitName moduleName;
})
